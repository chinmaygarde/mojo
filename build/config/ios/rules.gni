# Copyright 2014 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

template("ios_app") {

  assert(defined(invoker.deps),
         "Dependencies must be specified for $target_name")

  assert(defined(invoker.info_plist),
         "The application plist file must be specified for $target_name")

  assert(defined(invoker.app_name),
         "The name of iOS application for $target_name")

  ios_app_script = "//build/config/ios/ios_app.py"

  # We just create a variable so we can use the same in interpolation
  app_name = invoker.app_name

  # Generate the project structure

  struct_gen_target_name = target_name + "_struct"

  action(struct_gen_target_name) {

    script = ios_app_script

    sources = []
    outputs = [ "$root_build_dir/$app_name.app" ]

    args = [
      "structure",
      "-d",
      rebase_path(root_build_dir),
      "-n",
      app_name
    ]

  }

  # Generate the executable

  bin_gen_target_name = target_name + "_bin"

  executable(bin_gen_target_name) {
    libs = [ "UIKit.framework", "QuartzCore.framework", "OpenGLES.framework" ]
    deps = invoker.deps
    output_name = app_name
  }

  # Process the Info.plist

  plist_gen_target_name = target_name + "_plist"

  action(plist_gen_target_name) {

    script = ios_app_script

    sources = [ invoker.info_plist ]
    outputs = [ "$root_build_dir/Info.plist" ]

    args = [
      "plist",
      "-i",
      rebase_path(invoker.info_plist, root_build_dir),
      "-o",
      rebase_path(root_build_dir),
    ]
  }

  # Copy the generated binaries and assets to their appropriate locations

  copy_gen_target_name = target_name + "_copy"
  copy(copy_gen_target_name) {
    sources = [
      "$root_build_dir/Info.plist",
      "$root_build_dir/$app_name",
    ]

    outputs = [
      "$root_build_dir/$app_name.app/{{source_file_part}}"
    ]

    deps = [
      ":$struct_gen_target_name",
      ":$bin_gen_target_name",
      ":$plist_gen_target_name",
    ]
  }

  # Top level group

  group(target_name) {
    deps = [
      ":$copy_gen_target_name"
    ]
  }

}
